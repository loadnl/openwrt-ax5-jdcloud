name: AX5SSR

on:
  repository_dispatch:
  workflow_dispatch:


env:

  REPO_URL: https://github.com/coolsnowwolf/openwrt-gl-ax1800

#  REPO_URL: https://github.com/jwkinko/openwrt-gl-ax1800
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ax5-ssr.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone Source Code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update Feeds
      run: |
        cd openwrt && ./scripts/feeds update -a
        cd openwrt && ./scripts/feeds update istore

    - name: Install feeds
      run: |
        cd openwrt && ./scripts/feeds install -a
        cd openwrt && ./scripts/feeds install -d y -p istore luci-app-store

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile The Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

#    - name: Upload Bin Directory
#      uses: actions/upload-artifact@main
#      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
#      with:
#        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#        path: openwrt/bin

    - name: Organize Files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
   
    - name: Upload config
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: .config_${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/config

    - name: Upload Firmware Directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Push Tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%m%d%Y%H")"

    - name: Create Release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ steps.tag.outputs.release_tag }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          For GL.iNet GL-AX1800
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*

    - name: Remove Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 1
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
